#!/usr/bin/env groovy

// Access the environment variable REPO_HOME
def repo_home = System.getenv('REPO_HOME')
def env_dev_build = System.getenv('ENV_DEV_BUILD')
def arg_error = false
if (!repo_home) {
    println "release:: REPO_HOME is not set."
    arg_error = true
}
if (!env_dev_build) {
    println "release:: ENV_DEV_BUILD is not set."
    arg_error = true
}
if (arg_error) {
    System.exit(1)
}

def release_dir = "${repo_home}/release_candidate"
def release_dir_file = new File(release_dir)
if (!release_dir_file.exists()) {
    release_dir_file.mkdirs()
}

// Function to use 'install' command for copying and setting permissions
def install_file(source_fp, target_dp, perms) {
    def target_file = "${target_dp}/${new File(source_fp).name}"
    try {
        def cmd = ["install", "-m", perms, source_fp, target_file]
        def process = cmd.execute()
        process.waitFor()
        if (process.exitValue() != 0) {
            println "Error: Failed to install ${new File(source_fp).name} to ${target_dp}"
            println process.err.text
            System.exit(1)
        }
        println "Installed ${new File(source_fp).name} to ${target_dp} with permissions ${perms}"
    } catch (Exception e) {
        println "Error: ${e.message}"
        System.exit(1)
    }
}

println "Starting release process..."

def build_fp = "${repo_home}/developer/shell/build"
def ariadne_jar_fp = "${repo_home}/developer/jvm/AriadneGraph.jar"

// Install the build script
install_file(build_fp, release_dir, "ug+r")

// Install the JAR file
install_file(ariadne_jar_fp, release_dir, "ug+r")

println "Release process completed successfully."
