#!/bin/env bash

if [ -z "$ENV_DEV" ]; then
  echo "make_PaintIt:: script can only be run from the developer environment"
  return 1
fi

# Ensure we are in the right directory
cd "$REPO_HOME"/developer

# Start with a fresh scratch_pad and remove a prior jvm
# Depending, this is unnecessary and might even be undesirable.
# Better to clean up the stuff we will rewrite instead of everything.
# But for testing and in an unstable environment, this is probably best.
echo "Starting with a clean scratch_pad and jvm directories..."
rm -rf scratch_pad/*
rm -rf jvm/PaintIt.jar

# Compile all files (Black.java and Blue.java) with the correct package
echo "Compiling files..."
javac -d scratch_pad javac/Black.java javac/Blue.java javac/Green.java

if [ $? -ne 0 ]; then
  echo "Compilation failed."
  exit 1
fi

# Create a JAR file from the compiled class files with correct package structure
echo "Creating JAR file..."
mkdir -p jvm
jar cf jvm/PaintIt.jar -C scratch_pad .

if [ $? -eq 0 ]; then
  echo "JAR file created successfully: jvm/PaintIt.jar"
else
  echo "Failed to create JAR file."
  exit 1
fi

# cleanup the scratch_pad
# Depending, this is unnecessary and might even be undesirable.
# Would be better to clean up the stuff we wrote instead of everything.
# But for testing and in an unstable environment, this is probably best.
echo "Starting with a clean scratch_pad and jvm directories..."
rm -rf scratch_pad/*

# Create shell wrappers in developer/shell for easy execution
echo "Creating shell wrappers..."
mkdir -p shell

cat > shell/black << EOL
#!/bin/bash
java com/ReasoningTechnology/PaintIt/Black
EOL
chmod +x shell/black

cat > shell/blue << EOL
#!/bin/bash
java com/ReasoningTechnology/PaintIt/Blue
EOL
chmod +x shell/blue

cat > shell/green << EOL
#!/bin/bash
java com/ReasoningTechnology/PaintIt/Green
EOL
chmod +x shell/green


echo "Shell wrappers created successfully: black, blue, green"

